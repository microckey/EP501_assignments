function [Awork,xsoln,xmat,Errr] = simforel(A,b)

% HW 1 Problem 1(a)
% Function that uses simple forward elimination

%% Illustrate vanilla forward elimination
nref = length(b);               %system size for reference problem

L = eye(nref);
U = zeros(nref);

%note that the elimination procedure coded below modifies the matrix B
Awork = cat(2,A,b);          %This is our working version of the matrix used to perform elimination (i.e. it will be modified)
for ir1 = 2 : nref                                           %loop over rows from 2 to n performing elimination, this index marks what row we are starting the elimination from (i.e. using) for this particular column
    for ir2 = ir1 : nref                                     %this index marks the present position where elimination is being performed - i.e. where we are applying the elementary row operations
        fact = Awork(ir2,ir1-1);                                    %multiplier of the variable we are attempting to eliminate, its ir-1 column of this row
        em = Awork(ir1-1,ir1-1);    % elimination multiplier
        L(ir2,ir1-1) = fact/em; % Update L according to the elimination multiplier
        Awork(ir2,:) = Awork(ir2,:)-fact/em*Awork(ir1-1,:);    %subtract off previous row modified by a factor that eliminates the ir-1 column term in this row (so it has only super-diagonal elements), this is a little bit wasteful as it uses entire row...
    end %for
end %for

disp('elim([Aref,bref]) = ');
disp(Awork);

%% Illustrate back substitution on B using provided Matlab function
xsoln=backsub(Awork);
disp('Elimination/back sub solution:  ');
disp(xsoln);

xmat = A\b;
disp('Matlab,GNU/Octave built-in solution:  ');
disp(xmat);

Errr = xmat - xsoln;
disp('The error is:  ');
disp(Errr);

end % function